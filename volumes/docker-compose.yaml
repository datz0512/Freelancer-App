# docker compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana
version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data

  mongodb:
    container_name: mongodb_container
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - ./docker-volumes/data:/data/db

  mysql:
    container_name: mysql_container
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      - MYSQL_USER=freelancer
      - MYSQL_DATABASE=freelancer_auth
      - MYSQL_ROOT_PASSWORD=api
      - MYSQL_PASSWORD=api
    ports:
      - '3306:3306'
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql

  postgres:
    container_name: postgres_container
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=freelancer
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=freelancer_reviews
    ports:
      - '5432:5432'
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql

  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:3.13.0-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=freelancer
      - RABBITMQ_DEFAULT_PASS=freelancerpass
    ports:
      #AMQP protocol port
      - '5672:5672'
      #Management UI
      - '15672:15672'

  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: 'true'
      discovery.type: single-node
      network.host: 0.0.0.0
      transport.host: 127.0.0.1
      http.host: 0.0.0.0
      xpack.security.enabled: 'true'
      xpack.security.authc.api_key.enabled: 'true'
      xpack.monitoring.collection.enabled: 'true'
      xpack.security.enrollment.enabled: 'true'
      xpack.security.authc.token.enabled: 'true'
      ELASTIC_PASSWORD: admin1234
    ports:
      - 9300:9300
      - 9200:9200
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic

  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.11.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana
      - ELASTICSEARCH_SERVICEACCOUNT_TOKEN=AAEAAWVsYXN0aWMva2liYW5hL2ZyZWVsYW5jZXIta2liYW5hOkJGR1V1VVByUVVPQ1ZuZnpGV2ozeUE
      - XPACK_FLEET_AGENTS_ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch

  apmServer:
    container_name: apm_server_container
    image: docker.elastic.co/apm/apm-server:8.11.0
    ports:
      - 8200:8200
    volumes:
      - ./apm-server.yml:/usr/share/apm-server/apm-server.yml:ro
    networks:
      - elastic
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana_container:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana_container:5601
        -E apm-server.kibana.protocol=http
        -E strict.perms=false
        -E apm-server.auth.anonymous.enabled=true

  metricbeat:
    container_name: metricbeat_container
    image: docker.elastic.co/beats/metricbeat:8.11.0
    user: root
    ports:
      - 5066:5066
    networks:
      - elastic
    volumes:
      - ./metricbeat.yml/:/usr/share/metricbeat/metricbeat.yml:ro
      # docker module
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # system module
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /proc:/hostfs/proc:ro
      - /:/hostfs:ro
    command: ['--strict.perms=false', '-system.hostfs=/hostfs']
    depends_on:
      - elasticsearch

  heartbeat:
    container_name: heartbeat_container
    image: docker.elastic.co/beats/heartbeat:8.11.0
    user: root
    hostname: heartbeat
    cap_add:
      - NET_RAW
    networks:
      - elastic
    command: ['--strict.perms=false']
    volumes:
      - ./heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro
    depends_on:
      - elasticsearch

  gateway:
    container_name: gateway_container
    build:
      context: ../microservices/1-gateway-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4000:4000
    env_file: ../microservices/1-gateway-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - SECRET_KEY_ONE=9d485be96580e23c487c56845823dc64
      - SECRET_KEY_TWO=c400f7c1416942e46e282508b9b81473
      - CLIENT_URL=http://localhost:3000
      - AUTH_BASE_URL=http://auth_container:4002
      - USERS_BASE_URL=http://localhost:4003
      - GIG_BASE_URL=http://localhost:4004
      - MESSAGE_BASE_URL=http://localhost:4005
      - ORDER_BASE_URL=http://localhost:4006
      - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container :6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch

  notifications:
    container_name: notification_container
    build:
      context: ../microservices/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4001:4001
    env_file: ../microservices/2-notification-service/.env
    environment:
      - ENABLE_APM=0
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - SENDER_EMAIL=cornelius.russel@ethereal.email
      - SENDER_EMAIL_PASSWORD=aAj7tKan8PrFPeHEEV
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch

  auth:
    container_name: auth_container
    build:
      context: ../microservices/3-auth-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4002:4002
    env_file: ../microservices/3-auth-service/.env
    environment:
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - MYSQL_DB=mysql://freelancer:api@mysql_container:3306/freelancer_auth
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mysql

  users:
    container_name: users_container
    build:
      context: ../microservices/4-users-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4003:4003
    env_file: ../microservices/4-users-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/freelancer-users
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb

  gig:
    container_name: gig_container
    build:
      context: ../microservices/5-gig-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4004:4004
    env_file: ../microservices/5-gig-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/freelancer-gig
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb

  chat:
    container_name: chat_container
    build:
      context: ../microservices/6-chat-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4005:4005
    env_file: ../microservices/6-chat-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/freelancer-chat
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb

  order:
    container_name: order_container
    build:
      context: ../microservices/7-order-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4006:4006
    env_file: ../microservices/7-order-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_URL=mongodb://mongodb_container:27017/freelancer-order
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - STRIPE_API_KEY=sk_test_51ORdbdB230yA5VeJn8fSBrRHDuX99Dx9TNT33u20iuksXmLqAwr0lUkien784rhEWoxvI2S81vFQJojaZfl7abgL00HoMuNJft
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - mongodb

  review:
    container_name: review_container
    build:
      context: ../microservices/8-review-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 4007:4007
    env_file: ../microservices/8-review-service/.env
    environment:
      - ENABLE_APM=0
      - DATABASE_HOST=127.0.0.1
      - DATABASE_USER=freelancer
      - DATABASE_PASSWORD=api
      - DATABASE_NAME=freelancer_reviews
      - GATEWAY_JWT_TOKEN=d33b1c818586284cbe351cbdfa918fa7
      - JWT_TOKEN=2e648993c0bca09fa9808eb5bdbf4138
      - NODE_ENV=development
      - API_GATEWAY_URL=http://gateway_container:4000
      - RABBITMQ_ENDPOINT=amqp://freelancer:freelancerpass@rabbitmq_container:5672
      - CLOUD_NAME=dl7xgb8p3
      - CLOUD_API_KEY=496593978963562
      - CLOUD_API_SECRET=TpR_0a80YiF0VIlM_7pdUvzr7eo
      - ELASTIC_SEARCH_URL=http://elastic:admin1234@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
      - postgres

  jenkins:
    container_name: jenkins_container
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./docker-volumes/jenkins_compose/jenkins_configuration:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  jenkins-agent:
    container_name: jenkins_agent_container
    image: jenkins/ssh-agent:jdk11
    privileged: true
    user: root
    expose:
      - 22
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2k2aTfJuMmQ6/N74l3sPftgYx/6cMK437UefYTC6hEtg25pc0SNSjWTPI/tixmp2ms58LUA0XQw0P+V6rabol58DTPsDAsP29TG4aULI2tWcxfPvl+2gM83vUZFHOqE5Qc45/LU9zj7MamxCwyIjxIQZJf/+yNRFQqGpDpXaJ1EUgxcQef3uPABSxawioBaUVJGQNR3AIdoEV3Y44ZMOveg3madhAA1iHde7BvrENVXXpV4dyA9FBrEoDHqIPfe79IYYVfhRrqRLjnGnsomsNKBBm+60kmsVvu1OJORQJgsfUEskMon6WAKMxbOBbJH5nyF1GrUoQz8p+G6wJDimQH0aEjhAWTYAj8kj3bVS65OO4E+s65+m8EFKkW1KViszjl4KuStISYEv30+8YN1/l/ZEk2mbs5/C/aGoQHhBQyxr5lJl8aWsSQRTD7EunYcFt6reCZ41xGhZX8XDtWzhlGkG6KwdTPbbk1/u0rYJO+afd9yTs+sl7HCr8e3mNVRU= DatZ@datzs-MacBook-Pro.local

networks:
  elastic:
    name: elastic
